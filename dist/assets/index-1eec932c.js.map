{"version":3,"file":"index-1eec932c.js","sources":["../../src/entities/LeftoversTable/ui/Table/Table.tsx","../../src/entities/LeftoversTable/ui/Layout/Layout.tsx","../../src/pages/App/ui/App.tsx"],"sourcesContent":["import { Fragment, useCallback } from 'react';\nimport { Table as BootstrapTable } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport cn from 'classnames';\n\nimport { useActions } from '~/shared/lib/hooks';\nimport { actions as commonActions } from '~/shared/models/commonStores';\nimport { EditableField } from '~/shared/ui/EditableField';\n\nimport { selectLeftoversList, actions } from '../../model';\nimport type { Leftover, LeftoverFilling } from '../../types';\n\nimport css from './Table.module.sass';\n\nexport const Table = () => {\n  const leftoversList = useSelector(selectLeftoversList);\n  const { updateLeftover } = useActions(actions);\n  const { addAlertsSettings } = useActions(commonActions);\n\n  const onAcceptOrderedChange = useCallback(\n    (leftoverFilling: LeftoverFilling, leftover: Leftover) =>\n      updateLeftover({\n        cityName: leftover.cityName,\n        leftovers: leftover.leftovers.map(l => (l.nomenclature === leftoverFilling.nomenclature ? leftoverFilling : l)),\n      })\n        .unwrap()\n        .then(() => addAlertsSettings({ variant: 'success', children: 'Изменения сохранены' })),\n    []\n  );\n\n  if (!leftoversList) return null;\n\n  return (\n    <BootstrapTable bordered hover size=\"sm\" className=\"leftoverTable\">\n      <thead>\n        <tr>\n          <th>Город</th>\n          <th>Товар</th>\n          <th>Остаток</th>\n          <th>В пути</th>\n          <th>Необходимо дозаказать</th>\n        </tr>\n      </thead>\n      <tbody>\n        {leftoversList.map(leftoverFilling => (\n          <Fragment key={leftoverFilling.cityName}>\n            <tr>\n              <td className=\"align-middle\" colSpan={5}>\n                <strong>{leftoverFilling.cityName}</strong>\n              </td>\n            </tr>\n            {leftoverFilling.leftovers.map((product, i) => (\n              <tr key={product.vendorCode ?? i}>\n                <td></td>\n                <td className=\"align-middle\">{product.nomenclature}</td>\n                <td className=\"align-middle w-25\">{product.leftoverAtEnd}</td>\n                <td className=\"align-middle w-25\">\n                  <EditableField\n                    value={product.orderedCount}\n                    onAccept={payload => onAcceptOrderedChange({ ...product, orderedCount: payload }, leftoverFilling)}\n                  />\n                </td>\n                <td className={cn({ [css.haveToOrder!]: product.haveToOrder !== 0 }, 'align-middle')}>\n                  <div>{product.haveToOrder}</div>\n                </td>\n              </tr>\n            ))}\n          </Fragment>\n        ))}\n      </tbody>\n    </BootstrapTable>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { Table } from '~/entities/LeftoversTable/ui/Table/Table';\n\nimport { useActions, useInitDownloadData } from '~/shared/lib/hooks';\n\nimport { selectLeftoversList, actions } from '../../model';\n\nexport const Layout = () => {\n  const leftoversList = useSelector(selectLeftoversList);\n  const { getLeftoversList } = useActions(actions);\n\n  useInitDownloadData({ data: leftoversList, downloadFn: getLeftoversList });\n\n  return <Table />;\n};\n","import { Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport { LeftoversTable } from '~/entities/LeftoversTable';\nimport { UserLayout } from '~/entities/UserLayout';\n\nimport { selectIsAdmin } from '~/shared/models/commonStores';\n\nexport function App() {\n  const isAdmin = useSelector(selectIsAdmin);\n\n  return (\n    <UserLayout\n      showNavigation={isAdmin}\n      body={\n        <Container fluid className=\"bg-light p-4 rounded\">\n          <LeftoversTable />\n        </Container>\n      }\n    />\n  );\n}\n"],"names":["commonActions","useCallback","jsxs","jsx","Fragment","LeftoversTable"],"mappings":"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"}